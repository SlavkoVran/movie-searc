{"version":3,"sources":["APIKey.js","components/layout/831.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/sesarchAction.js","actions/types.js","components/home/SearchForm.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MovieContainer.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","id","Footer","href","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","console","log","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","Spinner","src","spinner","style","width","margin","display","alt","MovieCard","movie","Poster","Title","Year","imdbID","MovieContainer","content","Response","Search","map","i","key","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6270e48d.chunk.js","sourcesContent":["module.exports = {\n    'APIKey': '3eb784f1'\n}","module.exports = __webpack_public_path__ + \"static/media/831.7ac3ff31.gif\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-light bg-dark\">\n                <div className=\"container\">\n                    <div className=\"navbar-header\">\n                        <Link to={'/'} className=\"navbar-brand text-white text-lg brand-text\">\n                            MovieInfo\n                        </Link>\n                    </div>\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\n                        <li className=\"nav-item d-inline-block mr-4\">\n                            <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\n                        </li>\n                        <li className=\"nav-item d-inline-block mr-4\">\n                            <i className=\"fab fa-react fa-5x\" id='react-logo'/>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div>\n            <div className=\"m-row\">\n                <div className=\"col-md-12\">\n                    <div className=\"footer p-3 text-center bg-dark text-light d-flex justify-content-center align-items-center\">\n                        Developed By: \n                        <span className=\"text-warning font-weight-normal\">\n                             Slavko Vranesevic\n                        </span>, Using \n                        <i className=\"fab fa-react\" /> React JS &amp; Redux JS integrated with external movies data API\n                        <a href=\"https://www.omdbapi.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> OMDB</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types'\nimport axios from 'axios'\nimport { APIKey } from '../APIKey'\n\nexport const searchMovie = text => dispatch => {\n    dispatch({\n        type: SEARCH_MOVIE,\n        payload: text\n    })\n}\n\nexport const fetchMovies = text => dispatch => {\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\n        .then(response => dispatch({\n            type: FETCH_MOVIES,\n            payload: response.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const fetchMovie = id => dispatch => {\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\n        .then(response => dispatch({\n            type: FETCH_MOVIE,\n            payload: response.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const setLoading = () => {\n    return {\n        type: LOADING\n    }\n}\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE'\nexport const FETCH_MOVIES = 'FETCH_MOVIES'\nexport const FETCH_MOVIE = 'FETCH_MOVIE'\nexport const LOADING = 'LOADING'","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { searchMovie, fetchMovies, setLoading } from '../../actions/sesarchAction'\n\nclass SearchForm extends Component {\n\n    onChange = e => {\n        \n        this.props.searchMovie(e.target.value)\n        console.log(e.target.value)\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        this.props.fetchMovies(this.props.text)\n        this.props.setLoading()\n    }\n\n    render() {\n        \n        return (\n           <div className=\"jumbotron jumbotron-fluid text-center w-100 mt-3\">\n               <div className=\"container\">\n                   <h1 className=\"display-4 mb-3\">\n                       Search for movies...\n                   </h1>\n                   <form id=\"searchForm\" onSubmit={this.onSubmit}>\n                       <input \n                       type=\"text\"\n                       className=\"form-control\"\n                       name=\"searchText\"\n                       placeholder=\"Search Movies...\"\n                       onChange={this.onChange}/>\n                       <button className=\"btn btn-primary btn-bg mt-3\">\n                           Search\n                       </button>\n                   </form>\n               </div>\n           </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    text: state.movies.text\n})\n\n\n\nexport default connect(mapStateToProps, {searchMovie, fetchMovies, setLoading})(SearchForm)\n","import React from 'react'\nimport spinner from './831.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img \n            src={spinner}\n            style = {{width: '200px', margin: 'auto', display: 'block'}}\n            alt=\"Loading...\"/>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n class MovieCard extends Component {\n    render() {\n        const { movie } = this.props\n        return (\n                <div className=\"col-md-3 mb-5\">\n                    <div className=\"card card-body bg-dark text-center h-100\">\n                        <img src={movie.Poster} alt=\"Movie Cover\" className=\"w-100 mb-2\"/>\n                        <h5 className=\"text-light card-title\">\n                            {movie.Title} - {MovieCard.Year}\n                        </h5>\n                        <Link to={'/movie/' + movie.imdbID} className=\"btn btn-primary\">\n                            Movie Detail\n                            <i className=\"fas fa-chevron-right\"/>\n                        </Link>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default MovieCard\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport MovieCard from './MovieCard'\n\nexport class MovieContainer extends Component {\n    \n    render() {\n\n        const { movies } = this.props\n        let content = ''\n\n        content =\n         movies.Response === 'True'\n            ? movies.Search.map((movie, i) => <MovieCard key={i} movie={movie}/>) \n            : null\n        return (\n            <div className=\"m-row\">    \n                 {content}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    movies: state.movies.movies\n})\n\nexport default connect(mapStateToProps)(MovieContainer)\n","import React, { Component } from 'react'\nimport SearchForm from './SearchForm'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../layout/Spinner'\nimport MovieContainer from './MovieContainer'\n\n\nclass Landing extends Component {\n    render() {\n        const { loading } = this.props\n\n        return (\n            <div className=\"container landing-height d-flex justify-content-center align-items-center flex-column\">\n                <SearchForm />\n                {loading ? <Spinner /> : <MovieContainer /> }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    loading: state.movies.loading\n})\nexport default connect(mapStateToProps)(Landing)\n","import React , { Component }from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { fetchMovie, setLoading } from '../../actions/sesarchAction'\n\nimport Spinner from '../layout/Spinner'\n\nclass Movie extends Component { \n\n    componentDidMount(){\n        this.props.fetchMovie(this.props.match.params.id)\n        this.props.setLoading()\n    }\n\n    render () { \n        const { loading, movie } = this.props\n\n        let movieInfo = (\n        <div className=\"container mt-3\">\n            <div className=\"row\">\n                <div className=\"col-md-4 card card-body\">\n                    <img src={movie.Poster} alt=\"Poster\" className=\"thumbnail\"/>\n                </div>\n                <div className=\"col-md-8\">\n                    <h2 className=\"mb-4\">{movie.Title}</h2>\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item\">\n                            <strong>Genre: </strong> {movie.Genre}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Released:</strong> {movie.Released}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Rated:</strong> {movie.Rated}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>IMFB Rating:</strong> {movie.imdbRating}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Director:</strong> {movie.Director}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Writer:</strong> {movie.Writer}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Actors:</strong> {movie.Actors}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"card card-body bg-dark my-5 text-light\">\n                    <div className=\"col-md-12\">\n                        <h3>About</h3>\n                        {movie.Plot}\n                        <hr/>\n                        <a\n                        href={'http://www.imdb.com/title/' + movie.imdbID}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        className='btn btn-primary'> View on IMDB</a>\n                        <Link to=\"/\" className=\"btn btn-default text-light\">Go back to search</Link>\n                    </div>\n                </div>\n            </div>\n            </div>)\n\n        let content = loading ? <Spinner /> : movieInfo\n        return (\n            <div>\n                { content }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    loading: state.movies.loading,\n    movie: state.movies.movie\n})\n \nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie)\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types'\n\nconst initialState = {\n    text: \"\",\n    movies: [],\n    loading: false,\n    movie: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SEARCH_MOVIE: \n            return {\n                ...state,\n                text: action.payload,\n                loading: false\n            }\n        case FETCH_MOVIES: \n            return {\n                ...state,\n                movies: action.payload,\n                loading: false\n            }\n            case FETCH_MOVIE: \n            return {\n                ...state,\n                movie: action.payload,\n                loading: false\n            }\n            case LOADING: \n            return {\n                ...state,\n                loading: true\n            }\n        default: \n        return state\n    }\n}","import { combineReducers } from 'redux'\nimport searchReducer from './searchReducer'\n\nexport default combineReducers({\n    movies: searchReducer\n})\n\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport rootReducer from './reducers'\n\nconst middleware = [thunk]\nconst initialState = {}\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools(\n    applyMiddleware(...middleware)))\n\nexport default store","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport './App.css';\nimport Navbar from './components/layout/Navbar'\nimport Footer from './components/layout/Footer'\nimport Landing from './components/home/Landing'\nimport Movie from './components/home/Movie'\n\nimport store from './store'\n\n\nfunction App() {\n  return (\n   \n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path='/' component={Landing}/>\n            <Route exact path='/movie/:id' component={Movie}/>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}